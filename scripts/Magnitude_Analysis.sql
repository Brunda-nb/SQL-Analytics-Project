# Magnitude Analysis

This SQL script provides a **comprehensive magnitude analysis** of sales performance by calculating key business measures.  
It aggregates data from the `gold_fact_sales`, `gold_dim_product`, and `gold_dim_customers` tables, delivering a unified view of business health.  

---

## üõ†Ô∏è Why Magnitude Analysis?

Magnitude analysis is crucial because it helps in:  
- Understanding **overall business scale** (sales, orders, customers).  
- Identifying **efficiency metrics** (AOV, orders per customer).  
- Spotting **customer loyalty trends** (repeat customer %).  
- Highlighting **top-performing dimensions** (product, country).  

This allows stakeholders to **compare performance across periods** and make **data-driven strategic decisions**.  

---

## ‚ö° Example Use Cases
- **Executives**: Quick overview of revenue, growth, and customer retention.  
- **Marketing Teams**: Identifying repeat customer segments for loyalty campaigns.  
- **Sales Teams**: Recognizing best-performing products and regions.  
- **Data Analysts**: Baseline metrics for further drill-down analysis.  

---

#Find total customers by countries
%%sql
select count(distinct customer_id ) Total_Customers, country   
from gold_dim_customers 
group by country 
order by Total_Customers desc;

#Find total customers by gender.
%%sql
select count(distinct customer_id) Total_Customer , gender
from gold_dim_customers
group by gender
order by Total_Customer desc ;

#find total products by category
%%sql
select count(distinct product_id) Total_Product , category
from gold_dim_product
group by category
order by Total_Product desc ;

#Avg cost in each category
%%sql
select cast(avg(cost) as int) Avg_Cost , category
from gold_dim_product
group by category
order by Avg_Cost desc  ;

#Total revenue genrated by each category.
%%sql
select sum(sales_amount) Total_revenue , category
from gold_fact_sales f
left join gold_dim_product p
     on f.product_key = p.product_key
group by category
order by Total_revenue desc  ;

#Total revenue generated by each customer.
%%sql
select customer_id ,
       first_name,
       last_name,
       sum(sales_amount) Total_revenue
from gold_fact_sales f
left join gold_dim_customers c
     on f.customer_key = c.customer_key
group by customer_id
order by Total_revenue desc ;   

#What is the distribution of sold items across countries???
%%sql
select country ,
       sum(sales_amount) Total_revenue
from gold_fact_sales f
left join gold_dim_customers c
     on f.customer_key = c.customer_key
group by country
order by Total_revenue desc ;  
